public class Case1 extends java.lang.Object
{
    static int global_value;
    int global_value_instance;

    public void <init>()
    {
        Case1 l0;
        java.lang.StringBuilder $r_str_builder;

        l0 := @this: Case1;

        $r_str_builder = new java.lang.StringBuilder;

        specialinvoke $r_str_builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Case1: void <init>()>, Pars: [");

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Globals: [ ");

        specialinvoke l0.<java.lang.Object: void <init>()>();

        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] l0;
        int $stack2, $stack4, $stack5, $getter_0;
        Case1 $stack7;
        java.lang.StringBuilder $r_str_builder;
        java.lang.String $r_str_l0;

        l0 := @parameter0: java.lang.String[];

        $r_str_builder = new java.lang.StringBuilder;

        specialinvoke $r_str_builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Case1: void main(java.lang.String[])>, Pars: [");

        $getter_0 = lengthof l0;

        $r_str_l0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($getter_0);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r_str_l0);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Globals: [ ");

        $stack2 = lengthof l0;

        staticinvoke <Case1: boolean method1_sample(int)>($stack2);

        $stack4 = lengthof l0;

        $stack5 = 10 + $stack4;

        <Case1: int global_value> = $stack5;

        staticinvoke <Case1: boolean method2_sample()>();

        $stack7 = new Case1;

        specialinvoke $stack7.<Case1: void <init>()>();

        specialinvoke $stack7.<Case1: boolean method3_sample(int)>(10);

        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        staticinvoke <lac.jinn.exlib.DataLogger: void dump()>();

        return;
    }

    private static boolean method1_sample(int)
    {
        int l0;
        java.lang.StringBuilder $r_str_builder;
        java.lang.String $r_str_l0;

        l0 := @parameter0: int;

        $r_str_builder = new java.lang.StringBuilder;

        specialinvoke $r_str_builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Case1: boolean method1_sample(int)>, Pars: [");

        $r_str_l0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(l0);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r_str_l0);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Globals: [ ");

        if l0 <= 10 goto label1;

        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 1;

     label1:
        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 0;
    }

    private static boolean method2_sample()
    {
        int $stack0;
        java.lang.StringBuilder $r_str_builder;
        java.lang.String $r_str_1174687658;

        $r_str_builder = new java.lang.StringBuilder;

        specialinvoke $r_str_builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Case1: boolean method2_sample()>, Pars: [");

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Globals: [ ");

        $stack0 = <Case1: int global_value>;

        $r_str_1174687658 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack0);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r_str_1174687658);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        if $stack0 <= 10 goto label1;

        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 1;

     label1:
        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 0;
    }

    private boolean method3_sample(int)
    {
        Case1 l0;
        int l1, $stack2;
        java.lang.StringBuilder $r_str_builder;
        java.lang.String $r_str_l1, $r_str_212232499;

        l0 := @this: Case1;

        l1 := @parameter0: int;

        $r_str_builder = new java.lang.StringBuilder;

        specialinvoke $r_str_builder.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Case1: boolean method3_sample(int)>, Pars: [");

        $r_str_l1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(l1);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r_str_l1);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] Globals: [ ");

        $stack2 = l0.<Case1: int global_value_instance>;

        $r_str_212232499 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack2);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r_str_212232499);

        virtualinvoke $r_str_builder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        if $stack2 <= l1 goto label1;

        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 1;

     label1:
        staticinvoke <lac.jinn.exlib.DataLogger: void log(java.lang.StringBuilder)>($r_str_builder);

        return 0;
    }
}
